There are two main color models: the additive RGB (red, green, blue) model used in electronic devices, 
and the subtractive CMYK (cyan, magenta, yellow, black) model used in print.

rgb(red,green,blue)

rgb(0,0,0) = black;
rgb(255,255,255) = white;
rgb(255,0,0) = red;
rgb(0,255,0) = blue;
rgb(0,0,255) = green;
rgb(0,255,255) = cyan;



The HSL color model, or hue, saturation, and lightness, is another way to represent colors.
The CSS hsl function accepts 3 values: a number from 0 to 360 for hue, a percentage from 0 to 100 
for saturation, and a percentage from 0 to 100 for lightness.

If you imagine a color wheel, the hue red is at 0 degrees, green is at 120 degrees, and blue is 
at 240 degrees.

Saturation is the intensity of a color from 0%, or gray, to 100% for pure color. You must add the percent 
sign % to the saturation and lightness values.

Lightness is how bright a color appears, from 0%, or complete black, to 100%, complete white, with 50% being
neutral.


GRADIENt

A gradient is when one color transitions into another. The CSS linear-gradient function lets you 
control the direction of the transition along a line, and which colors are used.

One thing to remember is that the linear-gradient function actually creates an image element, 
and is usually paired with the background property which can accept an image as a value.

The linear-gradient function is very flexible -- here is the basic syntax you'll use in this tutorial:

linear-gradient(gradientDirection, color1, color2, ...);
gradientDirection is the direction of the line used for the transition. color1 and color2 are color arguments, which are the colors that will be used in the transition itself. These can be any type of color, including color keywords, hex, rgb, or hsl.

Now you'll apply a red-to-green gradient along a 90 degree line to the first marker.


BOX-SHADOW
The box-shadow property lets you apply one or more shadows around an element. Here is basic syntax:

box-shadow: offsetX offsetY color;
Here's how the offsetX and offsetY values work:

both offsetX and offsetY accept number values in px and other CSS units
a positive offsetX value moves the shadow right and a negative value moves it left
a positive offsetY value moves the shadow down and a negative value moves it up
if you want a value of zero (0) for any or both offsetX and offsetY, you don't need to add a unit. Every browser understands that zero means no change.

The height and width of the shadow is determined by the height and width of the element it's applied to. You can also use an optional spreadRadius value to spread out the reach of the shadow. More on that later.




body{
    background-color: #f4f4f4;
    color: #555;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;
    line-height: 1.6em;
    margin: 0;
}

.container{
    width: 80%;
    margin: auto;
    overflow: hidden;
}

#main-header{
    background-color: coral;
    color: white;
    text-align: center;
}

#navbar{
    background-color: black;
    color: grey;
}

#navbar ul{
padding: 0;
list-style: none;
}

#navbar li{
    display: inline;
}
#navbar a{
    color: #fff;
    text-decoration: none;
    font-size: 18px;
    padding: 15px;
}

#showcase{
    background-image: url("/mywebsite/images/showcase.jpg");
    background-position: center right;
    min-height: 300px;
    margin-bottom: 30px;
    text-align: center;
}

#showcase  h1{
    color:white;
    font-size: 50px;
    line-height: 1.6em;
    padding-top: 30px;
}

#main{
    float: left;
    width: 70%;
    padding: 0 30px;
    box-sizing: border-box;
}

#sidebar{
    float: right;
    width: 30%;
    background-color: #333;
    color:#fff;
    padding: 10px;
    box-sizing: border-box;
}
    

.main-footer{
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 20px;
    margin-top: 40px;
}

@media(max-width:600px){
    #main{
        width: 100%;
        float:none;

    }
    #sidebar{
        width: 100%;
        float:none;

    }
}